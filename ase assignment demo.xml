<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ase assignment demo</name>
    </assembly>
    <members>
        <member name="T:ase_assignment_demo.AppCanvas">
            <summary>
            the class implements the ICanvas interface for drawing shapes and writing text
            </summary>
        </member>
        <member name="M:ase_assignment_demo.AppCanvas.#ctor">
            <summary>
            constructor,initialize the canvas size
            </summary>
        </member>
        <member name="P:ase_assignment_demo.AppCanvas.Xpos">
            <summary>
            set the pen's X coordinate
            </summary>
        </member>
        <member name="P:ase_assignment_demo.AppCanvas.Ypos">
            <summary>
            set the pen's Y coordinate
            </summary>
        </member>
        <member name="P:ase_assignment_demo.AppCanvas.PenColour">
            <summary>
            set the pen's color.
            </summary>
        </member>
        <member name="M:ase_assignment_demo.AppCanvas.Circle(System.Int32,System.Boolean)">
            <summary>
            draw a circle
            </summary>
            <param name="radius">radius of the circle</param>
            <param name="filled">whether to fill</param>
            <exception cref="T:BOOSE.CanvasException">if the radius of the circle is less than 0, throw an exception</exception>
        </member>
        <member name="M:ase_assignment_demo.AppCanvas.Clear">
            <summary>
            clear the canvas
            </summary>
        </member>
        <member name="M:ase_assignment_demo.AppCanvas.DrawTo(System.Int32,System.Int32)">
            <summary>
            draw from the current pen position to the specified position
            </summary>
            <param name="toX">specified X coordinate</param>
            <param name="toY">specified Y coordinate</param>
            <exception cref="T:BOOSE.CanvasException">if the X or Y coordinate is less than 0 or greater than the size of the canvas, throw an exception</exception>
        </member>
        <member name="M:ase_assignment_demo.AppCanvas.getBitmap">
            <summary>
            get the current bitmap
            </summary>
            <returns>return the current bitmap</returns>
        </member>
        <member name="M:ase_assignment_demo.AppCanvas.MoveTo(System.Int32,System.Int32)">
            <summary>
            move the pen to the specified position
            </summary>
            <param name="x">specified X coordinate</param>
            <param name="y">specified Y coordinate</param>
            <exception cref="T:BOOSE.CanvasException">if the specified position is out of the canvas range, throw an exception</exception>
        </member>
        <member name="M:ase_assignment_demo.AppCanvas.Rect(System.Int32,System.Int32,System.Boolean)">
            <summary>
            draw a rect
            </summary>
            <param name="width">width of the rect</param>
            <param name="height">height of the rect</param>
            <param name="filled">whether to fill</param>
            <exception cref="T:BOOSE.CanvasException">if the width or height of the rectangle is negative, throw an exception</exception>
        </member>
        <member name="M:ase_assignment_demo.AppCanvas.Reset">
            <summary>
            set the pen's position to (0, 0)
            </summary>
        </member>
        <member name="M:ase_assignment_demo.AppCanvas.Set(System.Int32,System.Int32)">
            <summary>
            set the size of the canvas
            </summary>
            <param name="xsize">width of the canvas</param>
            <param name="ysize">height of the canvas</param>
        </member>
        <member name="M:ase_assignment_demo.AppCanvas.SetColour(System.Int32,System.Int32,System.Int32)">
            <summary>
            set the color of the drawing pen
            </summary>
            <param name="red">red proportion</param>
            <param name="green">green proportion</param>
            <param name="blue">blue proportion</param>
            <exception cref="T:BOOSE.CanvasException">throw an exception if RGB value is greater than 255</exception>
        </member>
        <member name="M:ase_assignment_demo.AppCanvas.Tri(System.Int32,System.Int32)">
            <summary>
            draw a tri
            </summary>
            <param name="width">width of the tri</param>
            <param name="height">height of the tri</param>
            <exception cref="T:BOOSE.CanvasException">if the width or height is less than 0, throw an exception</exception>
        </member>
        <member name="M:ase_assignment_demo.AppCanvas.WriteText(System.String)">
            <summary>
            write text
            </summary>
            <param name="text">content to be written</param>
        </member>
        <member name="T:ase_assignment_demo.AppCommandFactory">
            <summary>
            AppCommandFactory inherits from the CommandFactory class
            </summary>
        </member>
        <member name="M:ase_assignment_demo.AppCommandFactory.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:ase_assignment_demo.AppCommandFactory.MakeCommand(System.String)">
            <summary>
            create the corresponding command object based on the input command type
            </summary>
            <param name="commandType">command type</param>
            <returns>return the corresponding command object</returns>
        </member>
        <member name="T:ase_assignment_demo.AppTri">
            <summary>
            AppTri inherits from CanvasCommand
            </summary>
        </member>
        <member name="M:ase_assignment_demo.AppTri.Execute">
            <summary>
            override the Execute method,draw a tri
            </summary>
        </member>
        <member name="M:ase_assignment_demo.AppTri.CheckParameters(System.String[])">
            <summary>
            override the CheckParameters method,check if the parameters are valid
            </summary>
            <param name="parameter">parameter array</param>
            <exception cref="T:BOOSE.CommandException">if the number of parameters is less than 2, throw an exception</exception>
        </member>
        <member name="T:ase_assignment_demo.AppWrite">
            <summary>
            AppWrite inherits from CanvasCommand
            </summary>
        </member>
        <member name="M:ase_assignment_demo.AppWrite.Execute">
            <summary>
            override the Execute method
            </summary>
        </member>
        <member name="M:ase_assignment_demo.AppWrite.CheckParameters(System.String[])">
            <summary>
            override the CheckParameters method, check if the parameters are valid
            </summary>
            <param name="parameter">parameter array</param>
            <exception cref="T:BOOSE.CommandException">if the number of parameters is less than 1, throw an exception</exception>
        </member>
        <member name="M:ase_assignment_demo.Form1.#ctor">
            <summary>
            initialize the components, set up canvas properties, create command factory, stored program, and parser
            </summary>
        </member>
        <member name="M:ase_assignment_demo.Form1.OutputWindow_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            draw the content on the canvas
            </summary>
            <param name="sender">triggered object</param>
            <param name="e">drawing parameters</param>
        </member>
        <member name="M:ase_assignment_demo.Form1.RunBut_Click(System.Object,System.EventArgs)">
            <summary>
            when the run button is clicked, parse and execute the program, then refresh the canvas to display the results
            </summary>
            <param name="sender">triggered object</param>
            <param name="e">related parameters</param>
        </member>
        <member name="M:ase_assignment_demo.Form1.button3_Click(System.Object,System.EventArgs)">
            <summary>
            when the button is clicked, show the version information of BOOSE
            </summary>
            <param name="sender">triggered object</param>
            <param name="e">related parameters</param>
        </member>
        <member name="F:ase_assignment_demo.Form1.components">
            <summary>
             Required designer variable.
            </summary>
        </member>
        <member name="M:ase_assignment_demo.Form1.Dispose(System.Boolean)">
            <summary>
             Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ase_assignment_demo.Form1.InitializeComponent">
            <summary>
             Required method for Designer support - do not modify
             the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:ase_assignment_demo.Program.Main">
            <summary>
             The main entry point for the application.
            </summary>
        </member>
        <member name="T:ase_assignment_demo.ApplicationConfiguration">
            <summary>
             Bootstrap the application configuration.
            </summary>
        </member>
        <member name="M:ase_assignment_demo.ApplicationConfiguration.Initialize">
            <summary>
             Bootstrap the application as follows:
             <code>
             global::System.Windows.Forms.Application.EnableVisualStyles();
             global::System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(false);
             global::System.Windows.Forms.Application.SetHighDpiMode(HighDpiMode.SystemAware);
            </code>
            </summary>
        </member>
    </members>
</doc>
